// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  watchList     AssetWatch[]
  createdAt     DateTime     @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assets    Asset[]
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assets    Asset[]
}

model Author {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assets    Asset[]
}

model EngineVersion {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assets    Asset[]
}

model Asset {
  id               Int             @id @default(autoincrement())
  epicId           String          @unique
  name             String
  images           String[]
  shortDescription String
  description      String
  technicalDetails String
  price            Float
  discount         Float
  ratingScore      Float
  ratingCount      Int
  releasedAt       DateTime
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  author           Author          @relation(fields: [authorId], references: [id])
  authorId         Int
  category         Category        @relation(fields: [categoryId], references: [id])
  categoryId       Int
  tags             Tag[]
  engineVersions   EngineVersion[]
  watchers         AssetWatch[]
  plainData        Json            @default("{}")

  @@index([price])
  @@index([ratingScore])
  @@index([releasedAt])
}

model AssetWatch {
  id        Int      @id @default(autoincrement())
  assetId   Int
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  asset     Asset    @relation(fields: [assetId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([assetId, userId])
}
